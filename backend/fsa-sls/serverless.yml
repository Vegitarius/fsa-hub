# NOTE: update this with your service name
service: fsa

# Use the serverless-webpack plugin to transpile ES6
plugins:
  - serverless-webpack
  - serverless-offline

# serverless-webpack configuration
# Enable auto-packing of external modules
custom:
  webpack:
    webpackConfig: ./webpack.config.js
    includeModules: true

provider:
  name: aws
  runtime: nodejs8.10
  stage: prod
  region: us-west-2
  memorySize: 128
  timeout: 10

functions:
  hello:
    handler: handler.hello
    events:
      - http:
          path: hello
          method: get
  updateResource:
    handler: updateResource.main
    events:
      - http:
          path: resources/{id}
          method: put
  app:
    handler: index.handler
    events:
      - http: ANY /
      - http: 'ANY {proxy+}'
  create:
    handler: users.create
    environment:
      DB: ${ssm:mongo}
    events:
      - http:
          path: users
          method: post
          cors: true
  getOne:
    handler: users.getOne
    environment:
      DB: ${ssm:mongo}
    events:
      - http:
          path: users/{id}
          method: get
          cors: true
  getAll:
    handler: users.getAll
    environment:
      DB: ${ssm:mongo}
    events:
     - http:
         path: users
         method: get
         cors: true
  update:
    handler: users.update
    environment:
      DB: ${ssm:mongo}
    events:
     - http:
         path: users/{id}
         method: put
         cors: true
  delete:
    handler: users.delete
    environment:
      DB: ${ssm:mongo}
    events:
     - http:
         path: users/{id}
         method: delete
         cors: true
  getAllStudents:
    handler: users.getAllStudents
    environment:
      DB: ${ssm:mongo}
    events:
     - http:
         path: mentor/{id}
         method: get
         cors: true
  getAllInstructors:
    handler: users.getAllInstructors
    environment:
      DB: ${ssm:mongo}
    events:
     - http:
         path: mentors
         method: get
         cors: true
  createExperience:
    handler: experience.createExperience
    environment:
      DB: ${ssm:mongo}
    events:
      - http:
          path: experience
          method: post
          cors: true
  getOneExperience:
    handler: experience.getOneExperience
    environment:
      DB: ${ssm:mongo}
    events:
      - http:
          path: experience/{id}
          method: get
          cors: true
  getAllExperiences:
    handler: experience.getAllExperiences
    environment:
      DB: ${ssm:mongo}
    events:
     - http:
         path: experience
         method: get
         cors: true
  updateExperience:
    handler: experience.updateExperience
    environment:
      DB: ${ssm:mongo}
    events:
     - http:
         path: experience/{id}
         method: put
         cors: true
  deleteExperience:
    handler: experience.deleteExperience
    environment:
      DB: ${ssm:mongo}
    events:
     - http:
         path: experience/{id}
         method: delete
         cors: true